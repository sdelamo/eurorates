plugins {
    id 'java-library-conventions'
    id "com.diffplug.spotless" version "5.0.0"
    id("org.asciidoctor.jvm.convert") version "3.3.2"
    id "io.github.gradle-nexus.publish-plugin" version '1.1.0'
}
apply from: "gradle/asciidoc.gradle"

ext {
    micronautVersion = new File("${projectDir}/version.txt").text
}

dependencies {
    api "io.micronaut:micronaut-inject:$micronautVersion"
    implementation "io.micronaut:micronaut-runtime:$micronautVersion"
    api "io.micronaut:micronaut-http-client:$micronautVersion"
    api "io.micronaut.xml:micronaut-jackson-xml:2.3.0"

    implementation "io.projectreactor:reactor-core"

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    
    api('javax.validation:validation-api:2.0.1.Final') {
        transitive(false)
    }
    api("io.micronaut:micronaut-core:$micronautVersion") {
        transitive(false)
    }
    api("io.micronaut:micronaut-http:$micronautVersion") {
        transitive(false)
    }

    testImplementation "io.micronaut:micronaut-http-server-netty"
}

build.dependsOn('asciidoctor')

nexusPublishing {
    repositories {
        sonatype {
            username = System.getenv("SONATYPE_USERNAME") ?: project.hasProperty("sonatypeOssUsername") ? project.sonatypeOssUsername : ''
            password = System.getenv("SONATYPE_PASSWORD") ?: project.hasProperty("sonatypeOssPassword") ? project.sonatypeOssPassword : ''
            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}

